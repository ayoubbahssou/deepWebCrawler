{
  "name": "promisifier",
  "description": "A simple callback that turns every Async function into promise.",
  "version": "0.1.4",
  "author": {
    "name": "ClickHere",
    "email": "js@clickhere.co.il"
  },
  "dependencies": {
    "when": "2.7.x"
  },
  "devDependencies": {
    "mocha": "1.16.x"
  },
  "keywords": [
    "promise",
    "promises",
    "promisify"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/tounano/promisifier.js.git"
  },
  "main": "promisifier",
  "engines": {
    "node": ">= 0.8.0"
  },
  "license": "MIT",
  "readme": "# Promisifier\r\n\r\n    Turns any Async JS function into a Promise.\r\n\r\n## Installation\r\n\r\n    $ npm install promisifier\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar promisifier = require(\"promisifier\");\r\n```\r\n\r\n### promisifier.asyncMethodToPromise(method,[arg1[, arg2[, ...]]])\r\n\r\nPromisify an Async function with arguments.\r\n\r\n```javascript\r\nvar promisifier = require(\"promisifier\"),\r\n    request = require(\"request\");\r\n\r\nvar promise = promisifier.asyncMethodToPromise(request.get, \"http://google.com\", options);\r\n\r\npromise.then(console.log);\r\n```\r\n\r\n### asyncMethodToPromiseWithArrayAsArgs(method, args)\r\n\r\nPass args as array.\r\n\r\n```javascript\r\nvar promisifier = require(\"promisifier\"),\r\n    request = require(\"request\");\r\n\r\nvar args = [\r\n    \"http://google.com\",\r\n    {}\r\n];\r\n\r\nvar promise = promisifier.asyncMethodToPromise(request.get, args);\r\n\r\npromise.then(console.log);\r\n```",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/tounano/promisifier.js/issues"
  },
  "_id": "promisifier@0.1.4",
  "_from": "promisifier@latest"
}
